#include "pch.h"
#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <string.h>
#include <malloc.h>
#include <clocale>
#include <Windows.h>

using namespace std;
using namespace System;
using namespace System::IO;

#define ENTER 13
#define ESC 27
#define UP 72
#define DOWN 80
#define HOME 71
#define END 79




struct z {
	char name[20]; 
	char rang[15]; 
	char prof[20];
	long year_s; 
	long nstar; 
};

struct sp 
	char fio[20];
	long nstar;
	struct sp* sled;
	struct sp* pred;
}; 


int menu(int);
void min_n(struct z*, int);
void max_year(struct z*, int);
void profkol(struct z*, int);
void alfalist(struct z*, int, struct sp**);
void vstavka(struct z*, char*, int, struct sp**);
void profod(struct z*, int);
void diagram(struct z*, int, struct sp**);

int main(array<System::String^>^ args)
{
	int NC;

	char dan[][120] = {
	"Какой солдат имеет меньше всего наград?                  ",
	"Какой солдат позже всех вступил на службу?               ",
	"Есть ли введенная профессия с одинаковым кол-вом наград? ",
	"Алфавитный и обратный список всех солдат                 ",
	"Количество солдат введенных с клавиатуры(профессия)      ",
	"Диаграмма. Процентное соотношение наград солдат          ",
	"Выход                                                    "
	};
	char BlankLine[] = "                                                           ";


	int i, n;
	FILE* in;
	struct z* soldiers;
	setlocale(LC_CTYPE, "Russian");
	Console::CursorVisible::set(false);
	Console::BufferHeight = Console::WindowHeight;
	Console::BufferWidth = Console::WindowWidth;
	if ((in = fopen("zov.txt", "r")) == NULL)
	{
		printf("\nФайл form1.txt не открыт !");
		getch(); exit(1);
	}
	fscanf(in, "%d", &NC);
	soldiers = (struct z*)malloc(NC * sizeof(struct z));
	for (i = 0; i < NC; i++)
		fscanf(in, "%s%s%s%ld%ld", soldiers[i].name,
			soldiers[i].rang, soldiers[i].prof, &soldiers[i].year_s, &soldiers[i].nstar);
	for (i = 0; i < NC; i++)
		printf("\n%-20s %-15s %-15s %ld %ld ",
			soldiers[i].name,
			soldiers[i].rang, soldiers[i].prof, soldiers[i].year_s, soldiers[i].nstar);
	getch();

	struct sp* spisok = 0; 

	while (1)
	{
		Console::ForegroundColor = ConsoleColor::Gray;
		Console::BackgroundColor = ConsoleColor::Black;
		Console::Clear();
		Console::ForegroundColor = ConsoleColor::White;
		Console::BackgroundColor = ConsoleColor::Green;
		Console::CursorLeft = 10;
		Console::CursorTop = 4;
		printf(BlankLine);
		for (i = 0; i < 7; i++)
		{
			Console::CursorLeft = 10;
			Console::CursorTop = i + 5;
			printf(" %s ", dan[i]);
		}
		Console::CursorLeft = 10;
		Console::CursorTop = 12;
		printf(BlankLine);
		n = menu(7);
		switch (n) {
		case 1: min_n(soldiers, NC); break;
		case 2: max_year(soldiers, NC); break;
		case 3: profod(soldiers, NC); break;
		case 4: alfalist(soldiers, NC, &spisok); break;
		case 5: profkol(soldiers, NC); break;
		case 6: diagram(soldiers, NC, &spisok); break;
		case 7: exit(0);
		}
	} 
	return 0;
} 


int menu(int n)
{
	char dan[][120] = {
	   "Какой солдат имеет меньше всего наград?                  ",
	   "Какой солдат позже всех вступил на службу?               ",
	   "Есть ли введенная профессия с одинаковым кол-вом наград? ",
	   "Алфавитный и обратный список всех солдат                 ",
	   "Количество солдат введенных с клавиатуры(профессия)      ",
	   "Диаграмма. Процентное соотношение наград солдат          ",
	   "Выход                                                    "
	};


	int y1 = 0, y2 = n - 1;
	char c = 1;
	while (c != ESC)
	{
		switch (c) {
		case DOWN: y2 = y1; y1++; break;
		case UP: y2 = y1; y1--; break;
		case ENTER: return y1 + 1;
		case HOME: return 0;
		case END: y2 = y1; y1 = 7; break;
		}
		if (y1 > n - 1) { y2 = n - 1; y1 = 0; }
		if (y1 < 0) { y2 = 0; y1 = n - 1; }
		Console::ForegroundColor = ConsoleColor::White;
		Console::BackgroundColor = ConsoleColor::DarkGreen;
		Console::CursorLeft = 11;
		Console::CursorTop = y1 + 5;
		printf("%s", dan[y1]);
		Console::ForegroundColor = ConsoleColor::White;
		Console::BackgroundColor = ConsoleColor::Green;
		Console::CursorLeft = 11;
		Console::CursorTop = y2 + 5;
		printf("%s", dan[y2]);
		c = getch();
	} 
	exit(0);
}

void max_year(struct z* soldier, int NC)
{
	int i = 0; struct z bad;
	strcpy(bad.name, soldier[0].name);
	bad.year_s = soldier[0].year_s;
	for (i = 1; i < NC; i++)
		if (soldier[i].year_s > bad.year_s)
		{
			strcpy(bad.name, soldier[i].name);
			bad.year_s = soldier[i].year_s;
		}
	Console::ForegroundColor = ConsoleColor::White;
	Console::BackgroundColor = ConsoleColor::Black;
	Console::CursorLeft = 10;
	Console::CursorTop = 15;
	printf("Позже всех на службу вступил %s", bad.name);
	Console::CursorLeft = 10;
	Console::CursorTop = 16;
	printf("вступил в %ld году", bad.year_s);
	getch();
}


void min_n(struct z* soldier, int NC)
{
	int i = 0; struct z bad;
	strcpy(bad.name, soldier[0].name);
	bad.nstar = soldier[0].nstar;
	for (i = 1; i < NC; i++)
		if (soldier[i].nstar < bad.nstar)
		{
			strcpy(bad.name, soldier[i].name);
			bad.nstar = soldier[i].nstar;
		}
	Console::ForegroundColor = ConsoleColor::White;
	Console::BackgroundColor = ConsoleColor::Black;
	Console::CursorLeft = 10;
	Console::CursorTop = 15;
	printf("Самое маленькое кол-во наград %ld", bad.nstar);
	Console::CursorLeft = 10;
	Console::CursorTop = 16;
	printf("имеет %s", bad.name);
	getch();
}

void profkol(struct z* soldier, int NC)
{	
	int i = 0, flag = 0, k = 0;
	struct z pp;
	char dol[20];
	SetConsoleCP(1251);
	Console::CursorLeft = 10;
	Console::CursorTop = 15;
	scanf("%s", &dol);
	for (i = 0; i < NC; i++)
		if (strcmp(soldier[i].prof, dol) == 0)
			k++;
	Console::ForegroundColor = ConsoleColor::White;
	Console::BackgroundColor = ConsoleColor::Black;
	Console::CursorLeft = 10;
	Console::CursorTop = 15;
	printf("Солдат с профессией - %s ", dol);
	printf("Всего : %d", k);
	getch();
}

void alfalist(struct z* soldier, int NC, struct sp** spisok)
{
	int i, n = 0;
	struct sp* nt;
	struct sp* z;
	Console::ForegroundColor = ConsoleColor::Black;
	Console::BackgroundColor = ConsoleColor::Green;
	Console::Clear();
	if (!*spisok)
		for (i = 0; i < NC; i++)
			vstavka(soldier, soldier[i].name, NC, spisok);
	Console::Clear();
	printf("\n Алфавитный список и обратный список солдат");
	printf("\n ============================================\n");
	for (nt = *spisok; nt != 0; nt = nt->sled)
		printf("\n %-30s %ld", nt->fio, nt->nstar);
	for (nt = *spisok, z = 0; nt != 0; z = nt, nt = nt->sled);
	for (nt = z; nt != 0; nt = nt->pred)
	{
		Console::CursorLeft = 48;
		Console::CursorTop = 4 + n;
		printf(" %-30s %ld", nt->fio, nt->nstar);
		n += 1;
	}
	getch();
}

void vstavka(struct z* soldier, char* fio, int NC, struct sp** spisok)
{
	int i;
	struct sp* nov, * nt, * z = 0;
	for (nt = *spisok; nt != 0 && strcmp(nt->fio, fio) < 0; z = nt, nt = nt->sled);
	if (nt && strcmp(nt->fio, fio) == 0) return;
	nov = (struct sp*)malloc(sizeof(struct sp));
	strcpy(nov->fio, fio);
	nov->sled = nt;
	nov->pred = z;
	nov->nstar = 0;
	for (i = 0; i < NC; i++)
		if (strcmp(soldier[i].name, fio) == 0)
			nov->nstar += soldier[i].nstar;
	if (!z) *spisok = nov;
	else z->sled = nov;
	if (nt) nt->pred = nov;
	return;
}

void profod(struct z* soldier, int NC)
{
	int i = 0, flag = 0, j = 0;
	struct z pp;
	char dol[20];
	SetConsoleCP(1251);
	Console::CursorLeft = 10;
	Console::CursorTop = 15;
	scanf("%s", &dol);
	for (j = 0; j < NC; j++) {
		if (strcmp(soldier[j].prof, dol) == 0) {
			pp.nstar = soldier[j].nstar;
		}
		for (i = j + 1; i < NC; i++)
			if (strcmp(soldier[i].prof, dol) == 0 && soldier[i].nstar == pp.nstar) {
				flag = 1;
				break;
			}
	}
	Console::CursorLeft = 10;
	Console::CursorTop = 15;
	if (flag == 1) printf("Присутствует");
	else printf("Не присутствует");
	getch();
}

void diagram(struct z* soldier, int NC, struct sp** spisok)
{
	struct sp* nt;
	int len, i, NColor;
	long sum = 0;
	char str1[20];
	char str2[20];
	System::ConsoleColor Color;
	Console::ForegroundColor = ConsoleColor::Black;
	Console::BackgroundColor = ConsoleColor::White;
	Console::Clear();
	for (i = 0; i < NC; i++) sum = sum + soldier[i].nstar;
	if (!*spisok)
		for (i = 0; i < NC; i++)
			vstavka(soldier, soldier[i].name, NC, spisok);
	Color = ConsoleColor::Black; NColor = 0;
	for (nt = *spisok, i = 0; nt != 0; nt = nt->sled, i++)
	{
		sprintf(str1, "%s", nt->fio);
		sprintf(str2, "%3.1f%%", (nt->nstar * 100. / sum));
		Console::ForegroundColor = ConsoleColor::Black;
		Console::BackgroundColor = ConsoleColor::White;
		Console::CursorLeft = 5; Console::CursorTop = i + 1;
		printf(str1);
		Console::CursorLeft = 20;
		printf("%s", str2);
		Console::BackgroundColor = ++Color; NColor++;
		Console::CursorLeft = 30;
		for (len = 0; len < nt->nstar * 100 / sum; len++) printf(" ");
		if (NColor == 14)
		{
			Color = ConsoleColor::Black; NColor = 0;
		}
	}
	getch();
	return;
}
